// Generated by CoffeeScript 1.9.3
(function() {
  var InstallLXCBaseContainer, InstallPackages, aptgetinstall, async, checkPackageExistence, config, dpkgquery, exec, packagestatus, util;

  util = require('util');

  exec = require('child_process').exec;

  async = require('async');

  config = require('../package.json').config;

  packagestatus = [];

  dpkgquery = function(pkg, callback) {
    var command;
    if (pkg == null) {
      return callback(false);
    }
    command = "dpkg-query -s " + pkg;
    util.log("executing " + command + "...");
    return exec(command, (function(_this) {
      return function(error, stdout, stderr) {
        if (error != null) {
          return callback(false);
        } else {
          return callback(true);
        }
      };
    })(this));
  };

  aptgetinstall = function(pkg, callback) {
    var command;
    if (pkg == null) {
      callback(false);
    }
    command = "apt-get install -y " + pkg;
    util.log("executing " + command + "...");
    return exec(command, (function(_this) {
      return function(error, stdout, stderr) {
        util.log("execute - Error : " + error);
        util.log("execute - stdout : " + stdout);
        util.log("execute - stderr : " + stderr);
        if (error != null) {
          return callback(error);
        } else {
          return callback(true);
        }
      };
    })(this));
  };

  checkPackageExistence = function(cb) {
    return async.each(config.debianpackages, (function(_this) {
      return function(pack, callback) {
        console.log("checking the < " + pack + " > package  existence in the system");
        return dpkgquery(pack, function(result) {
          var pk;
          console.log((pack + " existence status :  ") + result);
          pk = {};
          pk.name = pack;
          pk.status = result;
          packagestatus.push(pk);
          return callback();
        });
      };
    })(this), (function(_this) {
      return function(err) {
        if (err) {
          console.log("checkPackageExistence error occured " + JSON.stringify(err));
          return cb(false);
        } else {
          return cb(true);
        }
      };
    })(this));
  };

  InstallPackages = function(cb) {
    return async.eachSeries(packagestatus, (function(_this) {
      return function(pack, callback) {
        console.log("checking the package installation status " + JSON.stringify(pack));
        if (pack.status === false) {
          console.log("Triggering the package installation - " + JSON.stringify(pack.name));
          return aptgetinstall(pack.name, function(result) {
            console.log((pack.name + " installation status ") + result);
            return callback();
          });
        } else {
          return callback();
        }
      };
    })(this), (function(_this) {
      return function(err) {
        if (err) {
          console.log("InstallPackages error occured " + JSON.stringify(err));
          return cb(false);
        } else {
          return cb(true);
        }
      };
    })(this));
  };

  InstallLXCBaseContainer = function(cb) {
    var command;
    command = "lxc-create -t ubuntu -n node -- -r trusty";
    util.log("executing " + command + "...");
    return exec(command, (function(_this) {
      return function(error, stdout, stderr) {
        util.log("installing LXC Base container - Error : " + error);
        util.log("Installing LXC Base container - stdout : " + stdout);
        util.log("Installing LXC Base container - stderr : " + stderr);
        if (error != null) {
          return callback(false);
        } else {
          return callback(true);
        }
      };
    })(this));
  };

  async.series([
    (function(_this) {
      return function(callback) {
        console.log("Dependent Debian packages are", config.debianpackages);
        console.log("Checking the package existence staus");
        return checkPackageExistence(function(rsult) {
          console.log("checkPackageExistence completed - result " + rsult);
          return callback(null, "debian package existence check success");
        });
      };
    })(this), (function(_this) {
      return function(callback) {
        console.log("Installing the packages ");
        return InstallPackages(function(result) {
          console.log("InstallPackages completed - result " + result);
          return callback(null, "Install packages success");
        });
      };
    })(this), (function(_this) {
      return function(callback) {
        console.log("Installing LXC ubuntu base image");
        return InstallLXCBaseContainer(function(result) {
          console.log("InstallLXCBaseContainer completed - result " + result);
          return callback(null, "InstallLXCBaseContainer success");
        });
      };
    })(this)
  ], (function(_this) {
    return function(err, result) {
      return console.log("TOPOLOGY -  RUN result is  %s ", result);
    };
  })(this));

}).call(this);
